[ --- Immediate Steps --- ] 

to code/configure:
    depolymerization bulk pyrene stuff
        disable transitions at concentration threshold
        configuration files
        cut time down at right place
        floating fit (normalize for final value?)

to run:
    fit melki rates for lots of cooperativities
    copoly sims for power of 10 rhos
    pi variation sims for all rhos
    fnc variation sims for a few rhos
    depoly fit sims for all rhos
    depoly timecourses for "best"/largest ok rho

to write:
    revamp intro to start with fnc data from 86 and 2011 data

    extend results
    make sure global fit discussion says "bulk and single-filament data"

    everything else

to misc:
    extract data from carlier86 (just the two points)
    extract data from 2011 paper
        single filament
        bulk pyrene

[ --- First paper goals --- ]

*error estimation
    - make sure the SEM new model is a o k
        * are we doing concentration SEMs right? (there is not std per run)

    - figure out how to calculate the error in the halftime
        SEM of [Pi] / d[Pi]/dt @ [Pi] halftime
            average SEM of containing points
        * check that this works
            e.g. regenerate melki random timecourse timecourse

    - propagate error estimate to rate
        SEM of halftime / sensitivity
        

*halftime sensitivity (various cooperativities)
    propagate error estimate


rate - cooperativity relationship (from melki)


fnc variation
    - use carlier86 conditions
    - show carlier86 points
    - show random, vectorial, carlier86 "bounding"/fitting cooperative traces
    + carlier86 halftime is 1000s
        is it simply the FNC & [G-actin]?
        is this because of nucleation?
        is there a problem with the experiment?


*depolymerization timecourse/profile (recent carlier)
    - plot data + lots of light single filament traces
    - plot chi^2 fit to pyrene time courses vs rho
        fit figure 2D of 2011 data with Frank's pyrene coefficients
        be sure to look at individual pyrene timecourses


copoly spread
    - add P & W points (to see how they look)


pi variation


[ --- Framework Thoughts --- ]

Missing features:
    nucleation, filament deletion, severing, and merging
    multi-stage simulations
    derived parameters
    monitoring/completion estimates
    job continuation/extension (more stats or restarting)
        also easy additional analysis on previous sims

Key components:
    - job control
        track live/zombie processes (make procs logout on any exception)
    - algorithm
    - data storage
        store much more data (full, individual runs)
            should these be zipped streams in the DB?
    - configuration
        controller selection from config file?
        good validation
    - analysis & results
        better framework for this
    - fitting/job selection
    - visualization
    - monitoring
        predict job completion
        ?email/sms

    - misc automation

Other shiny things:
    require worker code revision to match controller code revision
        (have setting to require clean/no modifications?)
    get delete cascading correct

[ ------------------------- ]

delete unused visualization code

Fix up database cascading.

Add database constraints for 1 or more experiments per session, runs per experiment?

Add validation for config files (separate program to check file set).
    Pretty sure most of this code exists in main branch.
